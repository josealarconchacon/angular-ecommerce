{"ast":null,"code":"import { map } from \"rxjs\";\nexport class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // define a base url for the spring service\n    this.baseServiceUrl = \"http://localhost:8080/api/products\";\n  }\n  // method return an observable of product array\n  // map json data from spring data rest to a product array\n  getProductList() {\n    return this.httpClient.get(this.baseServiceUrl).pipe(map(response => response._builtIn.products));\n  }\n}","map":{"version":3,"names":["map","ProductService","constructor","httpClient","baseServiceUrl","getProductList","get","pipe","response","_builtIn","products"],"sources":["/Users/josealarconchacon/Documents/ecommerce/03-frontend/angular-ecommerce/src/app/services/product.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { Product } from \"../common/product\";\n\n@Injectable({\n  providedIn: \"root\",\n})\n\ninterface GetResponse {\n_builtIn\n}\n\nexport class ProductService {\n  // define a base url for the spring service\n  private baseServiceUrl = \"http://localhost:8080/api/products\";\n\n  constructor(private httpClient: HttpClient) {}\n\n  // method return an observable of product array\n  // map json data from spring data rest to a product array\n  getProductList(): Observable<Product[]> {\n    return this.httpClient\n      .get<GetResponse>(this.baseServiceUrl)\n      .pipe(map((response) => response._builtIn.products));\n  }\n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;AAWtC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAH9B;IACQ,KAAAC,cAAc,GAAG,oCAAoC;EAEhB;EAE7C;EACA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,UAAU,CACnBG,GAAG,CAAc,IAAI,CAACF,cAAc,CAAC,CACrCG,IAAI,CAACP,GAAG,CAAEQ,QAAQ,IAAKA,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;EACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}